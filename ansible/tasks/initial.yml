---
# User.
- name: Create system user group.
  ansible.builtin.group:
    name: "{{ user_name }}"
    state: present

- name: Create system user.
  ansible.builtin.user:
    name: "{{ user_name }}"
    shell: /bin/bash
    groups:
      - sudo
      - "{{ user_name }}"
    createhome: true
    state: present

- name: Add sudo privileges for user.
  ansible.builtin.lineinfile:
    dest: /etc/sudoers
    regexp: "^{{ user_name }}"
    line: "{{ user_name }} ALL=(ALL) NOPASSWD:ALL"
    state: present
    validate: "visudo -cf %s"

# SSH.
- name: Create SSH directory.
  ansible.builtin.file:
    path: "/home/{{ user_name }}/.ssh"
    state: directory
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
    mode: "0700"

- name: Add authorized key for user.
  ansible.builtin.copy:
    remote_src: true
    src: /root/.ssh/authorized_keys
    dest: /home/{{ user_name }}/.ssh/authorized_keys
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
    mode: "0600"

- name: Set SSH configurations.
  ansible.builtin.lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
    validate: "sshd -t -f %s"
  loop:
    - regexp: "^#?PermitRootLogin"
      line: "PermitRootLogin no"

    - regexp: "^#?PasswordAuthentication"
      line: "PasswordAuthentication no"
  notify: Restart sshd.

# UFW.
- name: Deny incoming traffic.
  community.general.ufw:
    default: deny
    direction: incoming

- name: Allow outgoing traffic.
  community.general.ufw:
    default: allow
    direction: outgoing

- name: Allow specific ports.
  community.general.ufw:
    rule: allow
    port: "{{ item }}"
  loop:
    - 22
    - 80
    - 443

- name: Enable UFW.
  community.general.ufw:
    state: enabled
